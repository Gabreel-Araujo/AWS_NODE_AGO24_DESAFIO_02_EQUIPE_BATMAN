{
	"openapi": "3.0.0",
	"info": {
		"title": "CompassCar API",
		"description": "API para gerenciamento de carros, incluindo funcionalidades de criação, leitura, atualização e exclusão de registros de carros. Esta API permite a integração com outros sistemas, fornecendo endpoints seguros e documentados para operações de CRUD. Aproveite as funcionalidades avançadas para gerenciar seu inventário de carros de forma eficiente.",
		"version": "1.0.0"
	},
	"host": "localhost:3000",
	"basePath": "/",
	"tags": [
		{
			"name": "Auth",
			"description": "Authentication"
		},
		{
			"name": "User",
			"description": "Operations about user"
		},
		{
			"name": "Customer",
			"description": "Operations about customer"
		}
	],
	"schemes": ["http"],
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"components": {
		"securitySchemes": {
			"BearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Token de Autenticação"
			}
		}
	},
	"security": [
		{
			"BearerAuth": []
		}
	],
	"paths": {
		"/api/v1/login": {
			"post": {
				"tags": ["Auth"],
				"summary": "Autenticar Usuário",
				"description": "Essa rota permite a autenticação de usuários no sistema. O usuário deve fornecer um e-mail e uma senha válidos para obter um token de autenticação.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"example": "admin@example.com",
										"description": "E-mail do usuário"
									},
									"password": {
										"type": "string",
										"example": "senha123",
										"description": "Senha do usuário"
									}
								},
								"required": ["email", "password"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Autenticação bem-sucedida",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"accessToken": {
											"type": "string",
											"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
										},
										"expiresIn": {
											"type": "string",
											"example": "10m"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Dados inválidos",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "email is required | password is required | invalid email or password"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Usuário não autorizado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "invalid email or password"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/users": {
			"post": {
				"tags": ["User"],
				"summary": "Criar um novo usuário",
				"description": "Essa rota permite a criação de um novo usuário no sistema. Forneça um email único, nome completo e senha.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"fullName": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome completo do usuário"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do usuário"
									},
									"password": {
										"type": "string",
										"example": "teste123",
										"description": "Senha do usuário"
									}
								},
								"required": ["email", "fullName", "password"]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Usuário criado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Email já registrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Email already registered"
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": ["User"],
				"summary": "Listar todos os usuários",
				"description": "Essa rota permite a listagem de todos os usuários no sistema.",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 1
						},
						"description": "Número da página para paginação"
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 10
						},
						"description": "Número de itens por página"
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "John Doe"
						},
						"description": "Filtrar por nome completo do usuário"
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "john.doe@example.com"
						},
						"description": "Filtrar por email do usuário"
					},
					{
						"name": "deleted",
						"in": "query",
						"required": false,
						"schema": {
							"type": "boolean",
							"example": false
						},
						"description": "Filtrar usuários deletados"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "createdAt"
						},
						"description": "Campo para ordenar os resultados"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "ASC"
						},
						"description": "Ordem de classificação (ASC ou DESC)"
					}
				],
				"responses": {
					"200": {
						"description": "Lista de usuários retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "integer",
											"example": 1
										},
										"limit": {
											"type": "integer",
											"example": 10
										},
										"total": {
											"type": "integer",
											"example": 100
										},
										"users": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
													},
													"name": {
														"type": "string",
														"example": "John Doe"
													},
													"email": {
														"type": "string",
														"example": "john.doe@example.com"
													},
													"deletedAt": {
														"type": "string",
														"example": null
													},
													"createdAt": {
														"type": "string",
														"example": "2024-10-11T19:55:11.499Z"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Nenhum usuário encontrado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "users not found"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/users/{id}": {
			"get": {
				"tags": ["User"],
				"summary": "Busca um usuário por ID",
				"description": "",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
										},
										"fullName": {
											"type": "string",
											"example": "Teste da Silva"
										},
										"email": {
											"type": "string",
											"example": "teste@mail.com"
										},
										"password": {
											"type": "string",
											"example": "$2a$10$zIG4RbQmCr.K6A0yOPAhh.OYFM9LRxvhd1qCeMEf0KObzpneYEWIq"
										},
										"createdAt": {
											"type": "string",
											"example": "2024-10-11T19:55:11.499Z"
										},
										"deletedAt": {
											"type": "string",
											"example": "null"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "validation error"
										},
										"errors": {
											"type": "string",
											"example": "invalid uuid"
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": ["User"],
				"description": "",
				"summary": "Atualiza um usuário por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"fullName": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome completo do usuário"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do usuário"
									},
									"password": {
										"type": "string",
										"example": "teste123",
										"description": "Senha do usuário"
									}
								}
							},
							"required": []
						}
					}
				},
				"responses": {
					"200": {
						"description": "Usuário atualizado com sucesso. Se o corpo da requisição estiver vazio, nenhum dado será alterado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "30503c46-69da-424f-857a-d745a68ed4e0"
										},
										"createdAt": {
											"type": "string",
											"example": "2024-10-11T19:55:11.499Z"
										},
										"deletedAt": {
											"type": "string",
											"example": null
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Requisição inválida",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Dados inválidos"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "User not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["User"],
				"description": "",
				"summary": "Deleta um usuário por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Usuário deletado com sucesso. Nenhum conteúdo retornado."
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "User not found"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/customers": {
			"post": {
				"tags": ["Customer"],
				"summary": "Criar um novo cliente",
				"description": "Essa rota permite a criação de um novo cliente no sistema. Forneça um email único, cpf único, nome, data de nascimento e número de telefone.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome do cliente"
									},
									"birth": {
										"type": "string",
										"example": "1990-10-05",
										"description": "Data de nascimento do cliente"
									},
									"cpf": {
										"type": "string",
										"example": "12345678900",
										"description": "CPF do cliente"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do cliente"
									},
									"phone_number": {
										"type": "string",
										"example": "123456789",
										"description": "Número de telefone do cliente"
									}
								},
								"required": ["name", "birth", "cpf", "email", "phone_number"]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Cliente criado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Erro de validação",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Validation error: name is required, email is required, cpf must be 11 digits, birth must be in YYYY-MM-DD format"
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Email ou CPF já registrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "email or cpf already exists"
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": ["Customer"],
				"summary": "Listar todos os clientes",
				"description": "Essa rota permite a listagem de todos os clientes no sistema.",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "Teste"
						},
						"description": "Filtrar por nome do cliente"
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "teste@mail.com"
						},
						"description": "Filtrar por email do cliente"
					},
					{
						"name": "cpf",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "01134254412"
						},
						"description": "Filtrar por cpf do cliente"
					},
					{
						"name": "deleted",
						"in": "query",
						"required": false,
						"schema": {
							"type": "boolean",
							"example": false
						},
						"description": "Filtrar por clientes deletados"
					},
					{
						"name": "orderBy",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "name | cpf | email"
						},
						"description": "Campo para ordenar os resultados"
					},
					{
						"name": "order",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "ASC"
						},
						"description": "Ordem de classificação (ASC ou DESC)"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 1
						},
						"description": "Número da página para paginação"
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 10
						},
						"description": "Número de itens por página"
					}
				],
				"responses": {
					"200": {
						"description": "Lista de clientes retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "integer",
											"example": 1
										},
										"limit": {
											"type": "integer",
											"example": 10
										},
										"total": {
											"type": "integer",
											"example": 100
										},
										"customers": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
													},
													"name": {
														"type": "string",
														"example": "John Doe"
													},
													"birth": {
														"type": "string",
														"example": "1999-09-18"
													},
													"cpf": {
														"type": "string",
														"example": "01234567891"
													},
													"email": {
														"type": "string",
														"example": "customertest@mail.com"
													},
													"phone_number": {
														"type": "string",
														"example": "48999117156"
													},
													"created_at": {
														"type": "string",
														"example": "2024-10-12T00:48:11.146Z"
													},
													"deleted_at": {
														"type": "string",
														"example": null
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Nenhum cliente encontrado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Customers not found"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/customers/{id}": {
			"get": {
				"tags": ["Customer"],
				"summary": "Busca um cliente por ID",
				"description": "",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
										},
										"name": {
											"type": "string",
											"example": "Teste da Silva"
										},
										"birth": {
											"type": "string",
											"example": "1999-09-18"
										},
										"cpf": {
											"type": "string",
											"example": "3815161780"
										},
										"email": {
											"type": "string",
											"example": "teste@mail.com"
										},
										"phone_number": {
											"type": "string",
											"example": "48996748155"
										},
										"created_at": {
											"type": "string",
											"example": "2024-10-11T19:55:11.499Z"
										},
										"deleted_at": {
											"type": "string",
											"example": "null"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "validation error"
										},
										"errors": {
											"type": "string",
											"example": "invalid uuid"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Cliente não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Customer not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": ["Customer"],
				"description": "TODO",
				"summary": "Atualiza um cliente por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"fullName": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome completo do usuário"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do usuário"
									},
									"password": {
										"type": "string",
										"example": "teste123",
										"description": "Senha do usuário"
									}
								}
							},
							"required": []
						}
					}
				},
				"responses": {
					"200": {
						"description": "Usuário atualizado com sucesso. Se o corpo da requisição estiver vazio, nenhum dado será alterado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "30503c46-69da-424f-857a-d745a68ed4e0"
										},
										"createdAt": {
											"type": "string",
											"example": "2024-10-11T19:55:11.499Z"
										},
										"deletedAt": {
											"type": "string",
											"example": null
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Requisição inválida",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Dados inválidos"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "User not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Customer"],
				"description": "",
				"summary": "Deleta um cliente por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Cliente deletado com sucesso. Nenhum conteúdo retornado."
					},
					"404": {
						"description": "Cliente não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Customer not found"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"basepath": "/"
}
