{
	"openapi": "3.0.0",
	"info": {
		"title": "CompassCar API",
		"description": "API para gerenciamento de carros, incluindo funcionalidades de criação, leitura, atualização e exclusão de registros de carros. Esta API permite a integração com outros sistemas, fornecendo endpoints seguros e documentados para operações de CRUD. Aproveite as funcionalidades avançadas para gerenciar seu inventário de carros de forma eficiente.",
		"version": "1.0.0"
	},
	"host": "localhost:3000",
	"basePath": "/",
	"tags": [
		{
			"name": "Auth",
			"description": "Authentication"
		},
		{
			"name": "User",
			"description": "Operations about user"
		},
		{
			"name": "Customer",
			"description": "Operations about customer"
		},
		{
			"name": "Car",
			"description": "Operations about car"
		},
		{
			"name": "Order",
			"description": "Operations about order"
		}
	],
	"schemes": ["http"],
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"components": {
		"securitySchemes": {
			"BearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Token de Autenticação"
			}
		}
	},
	"security": [
		{
			"BearerAuth": []
		}
	],
	"paths": {
		"/api/v1/login": {
			"post": {
				"tags": ["Auth"],
				"summary": "Autenticar Usuário",
				"description": "Essa rota permite a autenticação de usuários no sistema. O usuário deve fornecer um e-mail e uma senha válidos para obter um token de autenticação.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"example": "admin@example.com",
										"description": "E-mail do usuário"
									},
									"password": {
										"type": "string",
										"example": "senha123",
										"description": "Senha do usuário"
									}
								},
								"required": ["email", "password"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Autenticação bem-sucedida",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"accessToken": {
											"type": "string",
											"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
										},
										"expiresIn": {
											"type": "string",
											"example": "10m"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Dados inválidos",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "email is required | password is required | invalid email or password"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Usuário não autorizado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "invalid email or password"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/users": {
			"post": {
				"tags": ["User"],
				"summary": "Criar um novo usuário",
				"description": "Essa rota permite a criação de um novo usuário no sistema. Forneça um email único, nome completo e senha.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"fullName": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome completo do usuário"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do usuário"
									},
									"password": {
										"type": "string",
										"example": "teste123",
										"description": "Senha do usuário"
									}
								},
								"required": ["email", "fullName", "password"]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Usuário criado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Email já registrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Email already registered"
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": ["User"],
				"summary": "Listar todos os usuários",
				"description": "Essa rota permite a listagem de todos os usuários no sistema.",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 1
						},
						"description": "Número da página para paginação"
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 10
						},
						"description": "Número de itens por página"
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "John Doe"
						},
						"description": "Filtrar por nome completo do usuário"
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "john.doe@example.com"
						},
						"description": "Filtrar por email do usuário"
					},
					{
						"name": "deleted",
						"in": "query",
						"required": false,
						"schema": {
							"type": "boolean",
							"example": false
						},
						"description": "Filtrar usuários deletados"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "createdAt"
						},
						"description": "Campo para ordenar os resultados"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "ASC"
						},
						"description": "Ordem de classificação (ASC ou DESC)"
					}
				],
				"responses": {
					"200": {
						"description": "Lista de usuários retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "integer",
											"example": 1
										},
										"limit": {
											"type": "integer",
											"example": 10
										},
										"total": {
											"type": "integer",
											"example": 100
										},
										"users": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
													},
													"name": {
														"type": "string",
														"example": "John Doe"
													},
													"email": {
														"type": "string",
														"example": "john.doe@example.com"
													},
													"deletedAt": {
														"type": "string",
														"example": null
													},
													"createdAt": {
														"type": "string",
														"example": "2024-10-11T19:55:11.499Z"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Nenhum usuário encontrado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "users not found"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/users/{id}": {
			"get": {
				"tags": ["User"],
				"summary": "Busca um usuário por ID",
				"description": "",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
										},
										"fullName": {
											"type": "string",
											"example": "Teste da Silva"
										},
										"email": {
											"type": "string",
											"example": "teste@mail.com"
										},
										"password": {
											"type": "string",
											"example": "$2a$10$zIG4RbQmCr.K6A0yOPAhh.OYFM9LRxvhd1qCeMEf0KObzpneYEWIq"
										},
										"createdAt": {
											"type": "string",
											"example": "2024-10-11T19:55:11.499Z"
										},
										"deletedAt": {
											"type": "string",
											"example": "null"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "validation error"
										},
										"errors": {
											"type": "string",
											"example": "invalid uuid"
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": ["User"],
				"description": "",
				"summary": "Atualiza um usuário por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"fullName": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome completo do usuário"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do usuário"
									},
									"password": {
										"type": "string",
										"example": "teste123",
										"description": "Senha do usuário"
									}
								}
							},
							"required": []
						}
					}
				},
				"responses": {
					"200": {
						"description": "Usuário atualizado com sucesso. Se o corpo da requisição estiver vazio, nenhum dado será alterado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "30503c46-69da-424f-857a-d745a68ed4e0"
										},
										"createdAt": {
											"type": "string",
											"example": "2024-10-11T19:55:11.499Z"
										},
										"deletedAt": {
											"type": "string",
											"example": null
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Requisição inválida",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Dados inválidos"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "User not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["User"],
				"description": "",
				"summary": "Deleta um usuário por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Usuário deletado com sucesso. Nenhum conteúdo retornado."
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "User not found"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/customers": {
			"post": {
				"tags": ["Customer"],
				"summary": "Criar um novo cliente",
				"description": "Essa rota permite a criação de um novo cliente no sistema. Forneça um email único, cpf único, nome, data de nascimento e número de telefone.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome do cliente"
									},
									"birth": {
										"type": "string",
										"example": "1990-10-05",
										"description": "Data de nascimento do cliente"
									},
									"cpf": {
										"type": "string",
										"example": "12345678900",
										"description": "CPF do cliente"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do cliente"
									},
									"phone_number": {
										"type": "string",
										"example": "123456789",
										"description": "Número de telefone do cliente"
									}
								},
								"required": ["name", "birth", "cpf", "email", "phone_number"]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Cliente criado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Erro de validação",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Validation error: name is required, email is required, cpf must be 11 digits, birth must be in YYYY-MM-DD format"
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Email ou CPF já registrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "email or cpf already exists"
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": ["Customer"],
				"summary": "Listar todos os clientes",
				"description": "Essa rota permite a listagem de todos os clientes no sistema.",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "Teste"
						},
						"description": "Filtrar por nome do cliente"
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "teste@mail.com"
						},
						"description": "Filtrar por email do cliente"
					},
					{
						"name": "cpf",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "01134254412"
						},
						"description": "Filtrar por cpf do cliente"
					},
					{
						"name": "deleted",
						"in": "query",
						"required": false,
						"schema": {
							"type": "boolean",
							"example": false
						},
						"description": "Filtrar por clientes deletados"
					},
					{
						"name": "orderBy",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "name | cpf | email"
						},
						"description": "Campo para ordenar os resultados"
					},
					{
						"name": "order",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "ASC"
						},
						"description": "Ordem de classificação (ASC ou DESC)"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 1
						},
						"description": "Número da página para paginação"
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 10
						},
						"description": "Número de itens por página"
					}
				],
				"responses": {
					"200": {
						"description": "Lista de clientes retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "integer",
											"example": 1
										},
										"limit": {
											"type": "integer",
											"example": 10
										},
										"total": {
											"type": "integer",
											"example": 100
										},
										"customers": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
													},
													"name": {
														"type": "string",
														"example": "John Doe"
													},
													"birth": {
														"type": "string",
														"example": "1999-09-18"
													},
													"cpf": {
														"type": "string",
														"example": "01234567891"
													},
													"email": {
														"type": "string",
														"example": "customertest@mail.com"
													},
													"phone_number": {
														"type": "string",
														"example": "48999117156"
													},
													"created_at": {
														"type": "string",
														"example": "2024-10-12T00:48:11.146Z"
													},
													"deleted_at": {
														"type": "string",
														"example": null
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Nenhum cliente encontrado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Customers not found"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/customers/{id}": {
			"get": {
				"tags": ["Customer"],
				"summary": "Busca um cliente por ID",
				"description": "",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
										},
										"name": {
											"type": "string",
											"example": "Teste da Silva"
										},
										"birth": {
											"type": "string",
											"example": "1999-09-18"
										},
										"cpf": {
											"type": "string",
											"example": "3815161780"
										},
										"email": {
											"type": "string",
											"example": "teste@mail.com"
										},
										"phone_number": {
											"type": "string",
											"example": "48996748155"
										},
										"created_at": {
											"type": "string",
											"example": "2024-10-11T19:55:11.499Z"
										},
										"deleted_at": {
											"type": "string",
											"example": "null"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "validation error"
										},
										"errors": {
											"type": "string",
											"example": "invalid uuid"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Cliente não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Customer not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": ["Customer"],
				"description": "",
				"summary": "Atualiza um cliente por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "ID do cliente a ser atualizado"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome do cliente"
									},
									"birth": {
										"type": "string",
										"example": "1990-01-01",
										"description": "Data de nascimento do cliente, formato yyyy-mm-dd"
									},
									"cpf": {
										"type": "string",
										"example": "12345678900",
										"description": "CPF do cliente"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do cliente"
									},
									"phone_number": {
										"type": "string",
										"example": "123456789",
										"description": "Número de telefone do cliente"
									}
								},
								"required": []
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Cliente atualizado com sucesso. Se o corpo da requisição estiver vazio, nenhum dado será alterado."
					},
					"400": {
						"description": "Requisição inválida",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Dados inválidos"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Cliente não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Customers not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Customer"],
				"description": "",
				"summary": "Deleta um cliente por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Cliente deletado com sucesso. Nenhum conteúdo retornado."
					},
					"404": {
						"description": "Cliente não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Customer not found"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/cars": {
			"post": {
				"tags": ["Car"],
				"summary": "Criar um novo carro",
				"description": "Essa rota permite a criação de um novo carro no sistema.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"plate": {
										"type": "string",
										"example": "MKF3123",
										"description": "Placa do carro"
									},
									"brand": {
										"type": "string",
										"example": "Ford",
										"description": "Marca do carro"
									},
									"model": {
										"type": "string",
										"example": "Fusion",
										"description": "Modelo do carro"
									},
									"year": {
										"type": "number",
										"example": 2019,
										"description": "Ano de fabricação do carro"
									},
									"daily_price": {
										"type": "number",
										"example": 300.0,
										"description": "Preço diário de aluguel do carro"
									},
									"km": {
										"type": "number",
										"example": 30000,
										"description": "Quilometragem do carro"
									},
									"status": {
										"type": "string",
										"enum": ["ativo", "inativo", "excluído"],
										"example": "ativo",
										"description": "Status do carro"
									},
									"items": {
										"type": "array",
										"items": {
											"type": "string",
											"example": "vidro eletrico",
											"description": "Nome do item"
										},
										"description": "Lista de itens associados ao carro"
									}
								},
								"required": [
									"plate",
									"brand",
									"model",
									"year",
									"daily_price",
									"km",
									"status"
								]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Carro criado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Carro já registrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "A car with this plate already exists"
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": ["Car"],
				"summary": "Listar todos os carros",
				"description": "Essa rota permite a listagem de todos os carros no sistema.",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 1
						},
						"description": "Número da página para paginação"
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 10
						},
						"description": "Número de itens por página"
					},
					{
						"name": "status",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "ativo | inativo | excluido"
						},
						"description": "Filtrar por status do carro"
					},
					{
						"name": "plate",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "MKF3123"
						},
						"description": "Filtra pela placa do carro"
					},
					{
						"name": "brand",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "Ford"
						},
						"description": "Filtra pela marca do carro"
					},
					{
						"name": "model",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "Focus"
						},
						"description": "Filtra pelo modelo do carro"
					},
					{
						"name": "km",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "10.800"
						},
						"description": "Filtra pelo total em Kms do carro"
					},
					{
						"name": "fromYear",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number",
							"example": 2014
						},
						"description": "Filtra os carros fabricados a partir do ano especificado"
					},
					{
						"name": "untilYear",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number",
							"example": 2020
						},
						"description": "Filtra os carros fabricados até o ano especificado"
					},
					{
						"name": "minDailyPrice",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number",
							"example": 25000
						},
						"description": "Filtra os carros com preço diário a partir do valor especificado"
					},
					{
						"name": "maxDailyPrice",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number",
							"example": 40000
						},
						"description": "Filtra os carros com preço diário até o valor especificado"
					},
					{
						"name": "order",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "ASC | DESC"
						},
						"description": "Ordem de classificação (ASC ou DESC)"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "year, km, daily_price"
						},
						"description": "Campo pelo qual a listagem será ordenada (year, km, daily_price)"
					}
				],
				"responses": {
					"200": {
						"description": "Lista de carros retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"type": "integer",
											"example": 4
										},
										"total_pages": {
											"type": "integer",
											"example": 1
										},
										"total": {
											"type": "integer",
											"example": 100
										},
										"current_page": {
											"type": "integer",
											"example": 1
										},
										"cars": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
													},
													"plate": {
														"type": "string",
														"example": "MAS1453"
													},
													"brand": {
														"type": "string",
														"example": "Ford"
													},
													"model": {
														"type": "string",
														"example": "Focus"
													},
													"year": {
														"type": "integer",
														"example": 2018
													},
													"daily_price": {
														"type": "number",
														"example": 16.8
													},
													"km": {
														"type": "number",
														"example": 18000.0
													},
													"status": {
														"type": "string",
														"enum": ["ativo", "inativo", "excluído"],
														"example": "inativo"
													},
													"created_at": {
														"type": "string",
														"example": "2024-10-14T15:53:52.227Z"
													},
													"updated_at": {
														"type": "string",
														"example": "2024-10-14T16:50:17.119Z"
													},
													"items": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"id": {
																	"type": "string",
																	"example": "fb901f0e-842b-44ca-8b87-f3309c94fe71"
																},
																"item": {
																	"type": "string",
																	"example": "vidro eletrico"
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Nenhum carro encontrado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Cars not found"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/cars/{id}": {
			"get": {
				"tags": ["Car"],
				"summary": "Busca um carro por ID",
				"description": "",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b",
											"description": "Identificador único do carro"
										},
										"plate": {
											"type": "string",
											"example": "MKF3123",
											"description": "Placa do carro"
										},
										"brand": {
											"type": "string",
											"example": "Ford",
											"description": "Marca do carro"
										},
										"model": {
											"type": "string",
											"example": "Fusion",
											"description": "Modelo do carro"
										},
										"year": {
											"type": "number",
											"example": 2019,
											"description": "Ano de fabricação do carro"
										},
										"daily_price": {
											"type": "number",
											"example": 16.8,
											"description": "Diária"
										},
										"km": {
											"type": "number",
											"example": 30000,
											"description": "Quilometragem do carro"
										},
										"status": {
											"type": "string",
											"enum": ["ativo", "inativo", "excluido"],
											"example": "ativo",
											"description": "Status do carro"
										},
										"created_at": {
											"type": "string",
											"example": "2024-10-12T00:48:11.146Z",
											"description": "Data de criação do registro"
										},
										"updated_at": {
											"type": "string",
											"example": "2024-10-12T00:48:11.146Z",
											"description": "Data da última atualização do registro"
										},
										"items": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"example": "89c00391-2d47-496c-8ca6-d560f3ed00a5",
														"description": "Identificador único do item"
													},
													"item": {
														"type": "string",
														"example": "vidro eletrico",
														"description": "Nome do item"
													}
												}
											},
											"description": "Lista de itens associados ao carro"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Carro não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Car not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": ["User"],
				"description": "",
				"summary": "Atualiza um usuário por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"fullName": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome completo do usuário"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do usuário"
									},
									"password": {
										"type": "string",
										"example": "teste123",
										"description": "Senha do usuário"
									}
								}
							},
							"required": []
						}
					}
				},
				"responses": {
					"200": {
						"description": "Usuário atualizado com sucesso. Se o corpo da requisição estiver vazio, nenhum dado será alterado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "30503c46-69da-424f-857a-d745a68ed4e0"
										},
										"createdAt": {
											"type": "string",
											"example": "2024-10-11T19:55:11.499Z"
										},
										"deletedAt": {
											"type": "string",
											"example": null
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Requisição inválida",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Dados inválidos"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "User not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Car"],
				"description": "",
				"summary": "Deleta um carro por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Carro deletado com sucesso. Nenhum conteúdo retornado."
					},
					"404": {
						"description": "Carro não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Car not found or already deleted"
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Carro não pode ser excluído",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Car cannot be deleted, it is in an active or approved rental order"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/rental-order": {
			"post": {
				"tags": ["Order"],
				"summary": "Criar um novo pedido",
				"description": "Essa rota permite a criação de um novo pedido no sistema.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"car_id": {
										"type": "string",
										"example": "3e2846a7-8d26-46ad-80ee-82029724a761",
										"description": "ID do Carro"
									},
									"customer_id": {
										"type": "string",
										"example": "a8052f5b-abdc-48b0-aa52-e8eb64a5cd76",
										"description": "ID do Cliente"
									}
								},
								"required": ["car_id", "customer_id"]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Pedido criado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e57e3a2d-0a16-4f8f-99be-64723bc1d396"
										}
									}
								}
							}
						}
					},
					"404_CustomerNotFound": {
						"description": "Cliente não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Customer not found"
										}
									}
								}
							}
						}
					},
					"404_CarNotFound": {
						"description": "Carro não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Car not found"
										}
									}
								}
							}
						}
					},
					"400_CarInUse": {
						"description": "Carro já está em uso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Car can't be used. It is already in use"
										}
									}
								}
							}
						}
					},
					"400_CustomerOrderOpen": {
						"description": "Cliente já possui uma ordem em aberto",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Can't create order because customer has an opened order already"
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Carro já registrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "A car with this plate already exists"
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": ["Order"],
				"summary": "Listar todos os pedidos",
				"description": "Essa rota permite a listagem de todos os pedidos no sistema.",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 1
						},
						"description": "Número da página para paginação"
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"example": 10
						},
						"description": "Número de itens por página"
					},
					{
						"name": "status",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "ativo | inativo | excluido"
						},
						"description": "Filtrar por status do carro"
					},
					{
						"name": "plate",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "MKF3123"
						},
						"description": "Filtra pela placa do carro"
					},
					{
						"name": "brand",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "Ford"
						},
						"description": "Filtra pela marca do carro"
					},
					{
						"name": "model",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "Focus"
						},
						"description": "Filtra pelo modelo do carro"
					},
					{
						"name": "km",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "10.800"
						},
						"description": "Filtra pelo total em Kms do carro"
					},
					{
						"name": "fromYear",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number",
							"example": 2014
						},
						"description": "Filtra os carros fabricados a partir do ano especificado"
					},
					{
						"name": "untilYear",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number",
							"example": 2020
						},
						"description": "Filtra os carros fabricados até o ano especificado"
					},
					{
						"name": "minDailyPrice",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number",
							"example": 25000
						},
						"description": "Filtra os carros com preço diário a partir do valor especificado"
					},
					{
						"name": "maxDailyPrice",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number",
							"example": 40000
						},
						"description": "Filtra os carros com preço diário até o valor especificado"
					},
					{
						"name": "order",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "ASC | DESC"
						},
						"description": "Ordem de classificação (ASC ou DESC)"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "year, km, daily_price"
						},
						"description": "Campo pelo qual a listagem será ordenada (year, km, daily_price)"
					}
				],
				"responses": {
					"200": {
						"description": "Lista de carros retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"type": "integer",
											"example": 4
										},
										"total_pages": {
											"type": "integer",
											"example": 1
										},
										"total": {
											"type": "integer",
											"example": 100
										},
										"current_page": {
											"type": "integer",
											"example": 1
										},
										"cars": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b"
													},
													"plate": {
														"type": "string",
														"example": "MAS1453"
													},
													"brand": {
														"type": "string",
														"example": "Ford"
													},
													"model": {
														"type": "string",
														"example": "Focus"
													},
													"year": {
														"type": "integer",
														"example": 2018
													},
													"daily_price": {
														"type": "number",
														"example": 16.8
													},
													"km": {
														"type": "number",
														"example": 18000.0
													},
													"status": {
														"type": "string",
														"enum": ["ativo", "inativo", "excluído"],
														"example": "inativo"
													},
													"created_at": {
														"type": "string",
														"example": "2024-10-14T15:53:52.227Z"
													},
													"updated_at": {
														"type": "string",
														"example": "2024-10-14T16:50:17.119Z"
													},
													"items": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"id": {
																	"type": "string",
																	"example": "fb901f0e-842b-44ca-8b87-f3309c94fe71"
																},
																"item": {
																	"type": "string",
																	"example": "vidro eletrico"
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Nenhum carro encontrado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Cars not found"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/rental-order/{id}": {
			"get": {
				"tags": ["Order"],
				"summary": "Busca um pedido por ID",
				"description": "",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "e6d7f7d3-4e32-42e3-837a-86753bcae83b",
											"description": "Identificador único do carro"
										},
										"plate": {
											"type": "string",
											"example": "MKF3123",
											"description": "Placa do carro"
										},
										"brand": {
											"type": "string",
											"example": "Ford",
											"description": "Marca do carro"
										},
										"model": {
											"type": "string",
											"example": "Fusion",
											"description": "Modelo do carro"
										},
										"year": {
											"type": "number",
											"example": 2019,
											"description": "Ano de fabricação do carro"
										},
										"daily_price": {
											"type": "number",
											"example": 16.8,
											"description": "Diária"
										},
										"km": {
											"type": "number",
											"example": 30000,
											"description": "Quilometragem do carro"
										},
										"status": {
											"type": "string",
											"enum": ["ativo", "inativo", "excluido"],
											"example": "ativo",
											"description": "Status do carro"
										},
										"created_at": {
											"type": "string",
											"example": "2024-10-12T00:48:11.146Z",
											"description": "Data de criação do registro"
										},
										"updated_at": {
											"type": "string",
											"example": "2024-10-12T00:48:11.146Z",
											"description": "Data da última atualização do registro"
										},
										"items": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"example": "89c00391-2d47-496c-8ca6-d560f3ed00a5",
														"description": "Identificador único do item"
													},
													"item": {
														"type": "string",
														"example": "vidro eletrico",
														"description": "Nome do item"
													}
												}
											},
											"description": "Lista de itens associados ao carro"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Carro não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Car not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": ["Order"],
				"description": "",
				"summary": "Atualiza um usuário por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"fullName": {
										"type": "string",
										"example": "Teste da Silva",
										"description": "Nome completo do usuário"
									},
									"email": {
										"type": "string",
										"example": "teste@mail.com",
										"description": "E-mail do usuário"
									},
									"password": {
										"type": "string",
										"example": "teste123",
										"description": "Senha do usuário"
									}
								}
							},
							"required": []
						}
					}
				},
				"responses": {
					"200": {
						"description": "Usuário atualizado com sucesso. Se o corpo da requisição estiver vazio, nenhum dado será alterado.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "30503c46-69da-424f-857a-d745a68ed4e0"
										},
										"createdAt": {
											"type": "string",
											"example": "2024-10-11T19:55:11.499Z"
										},
										"deletedAt": {
											"type": "string",
											"example": null
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Requisição inválida",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Dados inválidos"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "User not found"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Order"],
				"description": "",
				"summary": "Deleta um pedido por ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "Pedido deletado com sucesso. Nenhum conteúdo retornado."
					},
					"404": {
						"description": "Pedido não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "Order not found"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"definitions": {
		"Authentication": {
			"type": "object",
			"required": ["email", "password"],
			"properties": {
				"email": {
					"type": "string",
					"example": "teste@mail.com"
				},
				"password": {
					"type": "string",
					"example": "axsfsf23"
				}
			},
			"xml": {
				"name": "Authentication"
			}
		},
		"User": {
			"type": "object",
			"required": ["fullName", "email", "password"],
			"properties": {
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"fullName": {
					"type": "string",
					"example": "Teste da Silva"
				},
				"email": {
					"type": "string",
					"example": "teste@mail.com"
				},
				"password": {
					"type": "string",
					"example": "axsfsf23"
				}
			},
			"xml": {
				"name": "User"
			}
		},
		"Customer": {
			"type": "object",
			"required": ["name", "email", "cpf", "birth", "phone_number"],
			"properties": {
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"name": {
					"type": "string",
					"example": "Cliente da Silva"
				},
				"email": {
					"type": "string",
					"example": "cliente@mail.com"
				},
				"cpf": {
					"type": "string",
					"example": "08321323521"
				},
				"birth": {
					"type": "string",
					"example": "1990-10-05"
				},
				"phone_number": {
					"type": "string",
					"example": "48996748155"
				}
			},
			"xml": {
				"name": "Customer"
			}
		},
		"Car": {
			"type": "object",
			"required": [
				"plate",
				"brand",
				"model",
				"km",
				"daily_price",
				"year",
				"status"
			],
			"properties": {
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"plate": {
					"type": "string",
					"example": "MAS1253"
				},
				"brand": {
					"type": "string",
					"example": "Ford"
				},
				"model": {
					"type": "string",
					"example": "Focus"
				},
				"km": {
					"type": "number",
					"example": 180000
				},
				"year": {
					"type": "number",
					"example": 2018
				},
				"status": {
					"type": "string",
					"example": "ativo"
				},
				"daily_price": {
					"type": "number",
					"example": 16.8
				}
			},
			"xml": {
				"name": "Car"
			}
		},
		"Orders": {
			"type": "object",
			"required": ["car_id", "customer_id"],
			"properties": {
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"customer_id": {
					"type": "string",
					"format": "uuid"
				},
				"car_id": {
					"type": "string",
					"format": "uuid"
				},
				"order_date": {
					"type": "string",
					"example": "2024-10-14 18:45:17.364718"
				},
				"cep": {
					"type": "string",
					"example": "88790000"
				},
				"city": {
					"type": "string",
					"example": "Laguna"
				},
				"status": {
					"type": "string",
					"example": "ativo"
				},
				"state": {
					"type": "string",
					"example": "Santa Catarina"
				},
				"rental_rate": {
					"type": "number",
					"example": 0
				},
				"total": {
					"type": "number",
					"example": 100
				},
				"start_date": {
					"type": "string",
					"example": "2024-10-14 18:45:17.364718"
				},
				"end_date": {
					"type": "string",
					"example": "2024-10-14 18:45:17.364718"
				},
				"cancellation_date": {
					"type": "string",
					"example": "2024-10-14 18:45:17.364718"
				},
				"closing_date": {
					"type": "string",
					"example": "2024-10-14 18:45:17.364718"
				},
				"late_fee": {
					"type": "number",
					"example": 20
				}
			},
			"xml": {
				"name": "Order"
			}
		},
		"externalDocs": {
			"description": "Find out more about Swagger",
			"url": "http://swagger.io"
		}
	},
	"basepath": "/"
}
